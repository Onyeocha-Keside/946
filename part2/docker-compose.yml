# version: '3.8'

# services:
#   # PostgreSQL Database
#   postgres:
#     image: postgres:15-alpine
#     environment:
#       POSTGRES_DB: insurance_rag
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # Insurance RAG API
#   insurance-rag-api:
#     build: .
#     depends_on:
#       postgres:
#         condition: service_healthy
#     environment:
#       # Database Configuration
#       - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/insurance_rag
#       - DB_HOST=postgres
#       - DB_PORT=5432
#       - DB_NAME=insurance_rag
#       - DB_USER=postgres
#       - DB_PASSWORD=postgres
      
#       # Google Gemini Configuration
#       - GOOGLE_API_KEY=${GOOGLE_API_KEY}
#       - GEMINI_MODEL=gemini-pro
      
#       # Application Configuration
#       - ENVIRONMENT=production
#       - LOG_LEVEL=INFO
#       - API_HOST=0.0.0.0
#       - API_PORT=8000
      
#       # Performance Settings
#       - MAX_EXCEL_ROWS=100000
#       - EXCEL_CHUNK_SIZE=1000
#       - MAX_CONCURRENT_REQUESTS=10
      
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./data:/app/data
#       - ./logs:/app/logs
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   # Redis for caching (optional)
#   redis:
#     image: redis:7-alpine
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     restart: unless-stopped

# volumes:
#   postgres_data:
#   redis_data: